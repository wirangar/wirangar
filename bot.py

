# bot.py
import os
import logging
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ConversationHandler,
    MessageHandler,
    PreCheckoutQueryHandler,
    filters,
)
from handlers import (
    start, about, privacy, cancel, router, step_name, step_address,
    step_postal, step_phone, step_notes, precheckout, successful_payment,
)
from constants import States

# Setup logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[logging.FileHandler("bot.log"), logging.StreamHandler()],
)

async def main():
    TOKEN = os.environ["TELEGRAM_TOKEN"]
    BASE_URL = os.environ["BASE_URL"]

    app = ApplicationBuilder().token(TOKEN).build()

    # Conversation Handler
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(router)],
        states={
            States.NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_name)],
            States.ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_address)],
            States.POSTAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_postal)],
            States.PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_phone)],
            States.NOTES: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_notes)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    # Handlers
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about))
    app.add_handler(CommandHandler("privacy", privacy))
    app.add_handler(conv_handler)
    app.add_handler(PreCheckoutQueryHandler(precheckout))
    app.add_handler(MessageHandler(filters.SUCCESSFUL_PAYMENT, successful_payment))

    # Setup Webhook
    await app.initialize()
    await app.bot.set_webhook(f"{BASE_URL}/webhook")
    logging.info("Webhook set up successfully")

    # Start the application
    await app.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 8443)),
        url_path="/webhook",
        webhook_url=f"{BASE_URL}/webhook",
    )

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())